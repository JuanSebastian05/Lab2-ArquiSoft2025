name: CI/CDp - Maven build & tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  tests:
    name: Unit Tests (Java 21)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: petstore-feature5-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make Maven wrapper executable
        run: chmod +x ./mvnw

      - name: Set up JDK 21 and cache Maven
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'maven'

      - name: Show Java version
        run: java -version

      - name: Build and run tests (includes checkstyle)
        run: ./mvnw -B -V -U verify

      - name: Generate JaCoCo report
        run: ./mvnw jacoco:report

      - name: Upload JaCoCo report artifact
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: petstore-feature5-backend/target/site/jacoco

  sonar:
    # Depends on tests job
    needs: tests
    name: SonarCloud analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: petstore-feature5-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Make Maven wrapper executable
        run: chmod +x ./mvnw

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Show Java version
        run: java -version

      - name: Debug Java environment (before Sonar)
        run: |
          echo "PATH=$PATH"
          echo "which java: $(which java)"
          echo "JAVA_HOME=$JAVA_HOME"
          java -version || true
          javac -version || true
          ./mvnw -v || true

      - name: Ensure JAVA_HOME is set for Maven
        run: |
          # Compute JAVA_HOME from the java binary and export it for subsequent steps
          JAVA_BIN=$(readlink -f "$(which java)" 2>/dev/null || true)
          if [ -n "$JAVA_BIN" ]; then
            JAVA_HOME=$(dirname $(dirname "$JAVA_BIN"))
            echo "JAVA_HOME computed as: $JAVA_HOME"
            echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
          else
            echo "Could not compute JAVA_HOME (which java returned empty)"
          fi

      - name: Analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ -z "${SONAR_TOKEN}" ]; then
            echo "Warning: SONAR_TOKEN secret is not set. Skipping SonarCloud analysis.";
            exit 0;
          fi
          # Run Maven verify + Sonar. Update sonar.projectKey and sonar.organization to match your SonarCloud setup.
          ./mvnw -B -e verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=JuanSebastian05_Lab2-ArquiSoft2025 \
            -Dsonar.organization=juansebastian05-1 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  build:
    # Depends on sonar job
    needs: sonar
    name: Build JAR artifact
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: petstore-feature5-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make Maven wrapper executable
        run: chmod +x ./mvnw

      - name: Set up JDK 21 and cache Maven
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'maven'

      - name: Build with Maven (skip tests, already ran)
        run: ./mvnw -B package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: petstore-backend-jar
          path: petstore-feature5-backend/target/*.jar
          retention-days: 7

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: juansn/lab2-arquisoft2025
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          directory: petstore-feature5-backend
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}